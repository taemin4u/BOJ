최초에 제일 왼쪽의 바이러스를 찾고 상하좌우에 벽을 놓을 수 있는지를 검사한 후 벽을 3개 다 놓으면 BFS를 통해 
방의 개수를 찾고 돌아와서 찾았던 제일 왼쪽의 바이러스에 놓았던 벽을 허물고 다음 바이러스를 찾는 식으로 하려했음

벽을 허물려고 할 때 만약 상하좌우 모두 벽을 놓을 수 있고 지금까지 세운 벽이 0개라면 거기서의 경우의수는 모두 4가지이다. 그런데 벽을 세우는 반복문은
한 번만 돌고 끝나서 이 경우의 수를 모두 고려하지 못하였다. 그외에도 벽을 세우고 다음 바이러스로 넘어간 후 한 경우가 끝나면 다시 돌아와 벽을 허무는
데 반복문이 3중첩이 되었고 코드도 너무 길었다

그래서 그냥 모든 방에 대해 벽을 세우고 최대값을 찾기로 하였다
단순히 0일 때 1이되도록 하고, 한 경우가 끝나면 다시 1을 0으로 바꾸기만 하면 되니 이해가 쉬워졌다.
브루트포스나 백트래킹일 때는 세는 경우를 가장 단순하게 하는 것이 좋을 것 같다.

복습요소
1. BFS를 할 때 제일 왼쪽 2 찾기 -> 그 2에대한 BFS 실행 -> 그 다음 왼쪽 2 찾기 순으로 했다
그 다음 왼쪽 찾기를 할 때 이전 BFS를 통해 다음 왼쪽이 업데이트가 되어서 시간이 많이 걸리는 것 같음
--> 모든 2의 좌표를 큐에 먼저 넣고 큐가 빌 때까지 BFS를 실행하니 빨라졌음

2. 배열에서 한 칸만 이동하는 것은 struct나 또다른 배열로 선언하고 다루는 것이 더 편리했음